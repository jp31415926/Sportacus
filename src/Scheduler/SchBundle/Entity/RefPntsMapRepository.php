<?php

namespace Scheduler\SchBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RefPntsMapRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RefPntsMapRepository extends EntityRepository
{
  public function findAllByProject($project)
  {
    if ($project) {
      $projectid = $project->getId();
      $q = 'SELECT t FROM SchedulerBundle:RefPntsMap t' .
        " WHERE t.project=$projectid" .
        ' ORDER BY t.user ASC, t.team ASC';
      return $this->getEntityManager()
        ->createQuery($q)
        ->getResult();
    } else {
      return array();
    }
  }

  public function findAllByProjectAndTeam($project, $team)
  {
    if ($project && $team) {
      $projectid = $project->getId();
      $teamid = $team->getId();
      $q = 'SELECT t FROM SchedulerBundle:RefPntsMap t' .
        " WHERE t.project=$projectid" .
        " AND t.team=$teamid" .
        ' ORDER BY t.user ASC';
      return $this->getEntityManager()
        ->createQuery($q)
        ->getResult();
    } else {
      return array();
    }
  }

  public function findAllByProjectAndTeamAndUser($project, $team, $user)
  {
    if ($project && $team && $user) {
      $projectid = $project->getId();
      $teamid = $team->getId();
      $userid = $user->getId();
      $q = 'SELECT t FROM SchedulerBundle:RefPntsMap t' .
        " WHERE t.project=$projectid" .
        " AND t.team=$teamid" .
        " AND t.user=$userid";
      return $this->getEntityManager()
        ->createQuery($q)
        ->getResult();
    } else {
      return array();
    }
  }

  public function deleteAllByProjectAndUser($project, $user)
  {
    if ($project && $user) {
      $projectid = $project->getId();
      $userid = $user->getId();
      $q = 'DELETE FROM SchedulerBundle:RefPntsMap t' .
        " WHERE t.project=$projectid" .
        " AND t.user=$userid";
      return $this->getEntityManager()
        ->createQuery($q)
        ->getResult();
    } else {
      return array();
    }
  }

}
